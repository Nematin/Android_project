package com.example.studyit.data.dao

import androidx.room.Dao
import androidx.room.Query
import com.example.studyit.model.CSubject
import io.reactivex.Flowable
import io.reactivex.Single
import java.util.*

/********************************************************************************************************
 * Интерфейс позволяет выделить логику работы с разными источниками данных об объектах [CSubject]       *
 * из бизнес-логики приложения.                                                                         *
 * @author Селетков И.П. 2018 0910.                                                                     *
 *******************************************************************************************************/
@Dao
interface IDAOSubject                    : IDAOBase<CSubject, UUID>
{
    /****************************************************************************************************
     * Возвращает список всех объектов типа [CSubject].                                                 *
     *                                                                                                  *
     * @return - список объектов с возможностью отслеживания изменений.                                 *
     ***************************************************************************************************/
    @Query("""
        SELECT *
        FROM subjects
    """)
    override fun get()                      : Single<List<CSubject>>

    /****************************************************************************************************
     * Возвращает список всех объектов типа [CSubject], которые есть в базе данных с                    *
     * возможностью отслеживания изменений в составе списка.                                            *
     *                                                                                                  *
     * @return - список объектов с возможностью отслеживания изменений.                                 *
     ***************************************************************************************************/
    @Query("""
        SELECT *
        FROM subjects
    """)
    override fun getFlowable()              : Flowable<List<CSubject>>

    /****************************************************************************************************
     * Возвращает объект типа [CSubject] по идентификатору [id].                                        *
     *                                                                                                  *
     * @param id - идентификатор объекта.                                                               *
     * @return - обёртка над объектом с возможностью отслеживания изменений.                            *
     ***************************************************************************************************/
    @Query("""
        SELECT *
        FROM subjects
        WHERE id                            = :id
        LIMIT 1
    """)
    override fun get(
        id                                  : UUID
    )                                       : Single<CSubject>
    /****************************************************************************************************
     * Возвращает объект типа [CSubject] по идентификатору [id] с возможностью отслеживания             *
     * изменений объекта.                                                                               *
     *                                                                                                  *
     * @param id - идентификатор объекта.                                                               *
     * @return - обёртка над объектом с возможностью отслеживания изменений.                            *
     ***************************************************************************************************/
    @Query("""
        SELECT *
        FROM subjects
        WHERE id                            = :id
        LIMIT 1
    """)
    override fun getFlowable(
        id                                  : UUID
    )                                       : Flowable<CSubject>
    /****************************************************************************************************
     * Возвращает объект типа [CSubject] по идентификатору [id].                                        *
     *                                                                                                  *
     * @param id - идентификатор объекта.                                                               *
     * @return - обёртка над объектом с возможностью отслеживания изменений.                            *
     ***************************************************************************************************/
    @Query("""
        SELECT *
        FROM subjects
        WHERE id                            = :id
        LIMIT 1
    """)
    override fun getSync(
        id                                  : UUID
    )                                       : CSubject?

}